name: build

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  scan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pylint bandit pytest coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run linters
        run: |
          if [ -f ./run_linters.sh ]; then
            chmod +x ./run_linters.sh
            ./run_linters.sh
          else
            echo "No run_linters.sh found, skipping linters."
          fi

      - name: Run tests and generate coverage
        run: |
          coverage run -m pytest
          coverage xml

      - name: Patch project version
        run: |
          version=$(grep VERSION sonar/version.py | cut -d "=" -f 2 | sed "s/[\'\" ]//g")
          echo "sonar.projectVersion=$version" >> sonar-project.properties

      - name: SonarCloud scan
        uses: sonarsource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=deviscoutb
            -Dsonar.projectKey=ISCODEVUTB_DSTeam_BLAHX3
            -Dsonar.sources=src/
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.test.exclusions=**/tests/**,**/test_*.py
            -Dsonar.tests=tests/
            -Dsonar.verbose=true
